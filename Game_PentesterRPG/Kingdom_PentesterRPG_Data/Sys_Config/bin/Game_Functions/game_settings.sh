## End of bash preconfig ----------------------

# ---------Delevopment mode begin -------------------------------------
# Made by me, you can delete all of this if you don't use it.
# If you're just going to play the game you can delete until it says end
# ---------------------------------------------------------------------

# First level and used as base for others with higher complexity.

magicdoor() {
    # Declare the attempts variable
    local attempts=4

    # Declare the password as a constant
    readonly KEY=6aL!jW4$umw7gKHLZ*a&YWBZdGqxNF
    echo -e $KEY
    # Prompt the user to enter the key
    read -p "Welcome Bravior. This is your first challenge.
If you have good eyes for hacking, you've already found the 30-digit key.
You can't proceed further without the key.
If you fail three times i will kill your terminal to scare you off!
key:" input

    # Continue prompting the user until the correct key is entered
    while [ "$input" != KEY ]; do
        # Check if the user has made 3 unsuccessful attempts
        if [ $attempts -le 0 ]; then
            echo -e " Try again harder! I will kill you now!\n"
            exit 1
        fi
        if [ $attempts -le 2 ]; then
            echo -e "You have two lives, are you sure you know the password? You can search around the main folder.\n"
            exit 1
        fi

        # Prompt the user to enter the key again
        echo -e "Please enter the hidden key found in the main repository.
If you don't have the key, you must search it.
You better leave before I kill your terminal! I am not joking!
Enter the key: "
        read input
        # Decrement the attempts
        attempts=$((attempts-1))
    done

    # Check if the user input matches the password (without quotes)
    if [ "$input" = "$KEY" ]; then
        # Display a success message once the correct key is entered
        echo -e "Congratulations! You're a great adventurer! Prepare yourself, this is just the beginning!\n"
    fi
}

# Shortcut .bashrc
alias bash='code ~/.bashrc'

# Shortcut git
alias g='git'

# Shortcut to create new checkout.
alias gnew='git checkout -b'

# Shortcut git commit -m "text" && git add .
alias gc='git commit -am'

# Shortcut git commit -am && -A
alias gca='git add -A && git commit -am'

# Shortcut to create a pr to main branch even if it's secured.
alias gpf='git push --set-upstream origin main --force' #Never merge other then main

alias gp='git push --set-upstream origin' #Never merge other then main

# Shortcut to see all logs.
alias gl='git log --graph --oneline --decorate'

## -------------- Shell usefull shortcuts-------------------------------

alias inst='sudo apt install'

alias uinst='sudo apt remove'

alias instlist='apt list --installed'

# Instead of using two functions, just type one folder name if you want a single Dir.
alias mkdir='mkdir -pv'

## --------------------------  Confirmations --------------------

# ------------------GAME SETTINGS---------------------------------------
# PLEASE READ game_settings.md before enabling or disabling anything bellow:
# You might disturb the game if you do so.
# Disable only without reading game_settings.md if you know what you're doing.

# Makes any type of extraction inside the game in an easier way, simply type ex <file>.
# Better not remove it, you might have to unzip a lot of levels on this game.
# Well known function:
#
#
# type alias in terminal if you want to see all the configs
# ----------------------------------------------------------------------------------

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Easier cd for new players
alias go='cd'

# Easier home for new players (beta error)
alias pentesterrpg="--go to /home"

# Clear the game window
alias c='clear'

# See what's in the room
alias see='ls'

# See what's hidden in the room sorted and first items then folders.
# If you want to change to search folders first items later change for (ls -AS).
alias find='(ls -AS)'

# See the permissions on files so that you can change permissions on the needed files.
alias spy='ls -hal'

# See full game content
alias seegame='ls -xCR'

# Refreshes any change in the configuration
alias update='source ~/.bashrc'

# Move back one rooms, shows whats on the room, opens any .md file if there is any.
alias .1='echo "You have found:" && cd .. && ls -xC && code "$PWD"/*.md'
# Move back two rooms, shows whats on the room, opens any .md file if there is any.
alias .2='echo "You have found:" && cd ../.. && ls -xC && code "$PWD"/*.md'
# Move back three rooms, shows whats on the room, opens any .md file if there is any.
alias .3='echo "You have found:" && cd ../../.. && ls -xC && code "$PWD"/*.md'
# Move back four rooms, shows whats on the room, opens any .md file if there is any.
alias .4='echo "You have found:" && cd ../../../.. && ls -xC && code "$PWD"/*.md'
# Move back five rooms, shows whats on the room, opens any .md file if there is any.
alias .5='echo "You have found:" && cd ../../../../.. && ls -xC && code "$PWD"/*.md'
# Move back six rooms, shows whats on the room, opens any .md file if there is any.
alias .6='echo "You have found:" && cd ../../../../../.. && ls -xC && code "$PWD"/*.md'
# Move back seven rooms, shows whats on the room, opens any .md file if there is any.
alias .7='echo "You have found:" && cd ../../../../../../.. && ls -xC && code "$PWD"/*.md'
# Move back eight rooms, shows whats on the room, opens any .md file if there is any.
alias .8='echo "You have found:" && cd ../../../../../../../.. && ls -xC && code "$PWD"/*.md'
# Move back nine rooms, shows whats on the room, opens any .md file if there is any.
alias .9='echo "You have found:" && cd ../../../../../../../../.. && ls -xC && code "$PWD"/*.md'
# Move back ten rooms, shows whats on the room, opens any .md file if there is any.
alias .10='echo "You have found:" && cd ../../../../../../../../../.. && ls -xC && code "$PWD"/*.md'

# -------- FUNCTIONS -----------

ex ()
{
  if [ -f "$1" ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       unrar x $1   ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *.deb)       ar x $1      ;;
      *.tar.xz)    tar xf $1    ;;
      *.tar.zst)   unzstd $1    ;;
      *)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

# Defines a function to enable game time
gametime() {
  # If the user goes to a non existing path display an error plus time
  if [ ! -d "$PWD" ]; then
    echo " %s\n" "Error: You still can't hack, that place does not exist."
    echo " %s\n" "Time: $(date)"
  # If the player travels to the same place display an error plus time
  elif [ "$PWD" = "$PREV_PWD" ]; then
    echo " %s\n" "Error: Have you travelled to the same space? I have not yet made a space travel machine."
    echo " %s\n" "Time: $(date)"
  else
    # If the player travels to a new place display time and save place as current place
    echo " %s\n" "Time: $(date)"
    PREV_PWD="$PWD"
  fi
}

bag() {
    if [ "$1" = "open_bag" ]; then
        # You need to do first: inst gawk
        locate bag.md;
        if [ -f "bag.md" ]; then
            cat bag.md
            echo "Bag opened."
        else
            touch bag.md
            echo "You've lost your bag, I've made a new one for you."
        fi
    fi
}

# --------------- ENG GAME SETTINGS --------------
# Do not edit anything bellow unless you know what you're doing.
# They do not belong to the game and you might break terminal.
# -------------------------------------------------